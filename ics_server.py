# -*- coding: utf-8 -*-
"""client.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W5lq-SVFz89s2PZNECt5jtWfAFSoH64h
"""

import socket
import json
import wave


import wave
import math
from random import randint

def int_to_byte(num):
  byt=[]
  for i in range(8):
    byt.append(0)

  i=7

  while(num>0):
    
    byt[i]=num%2
    num=int(num/2)  
    i=i-1
  
  return byt

def byte_to_int(byt):
  num=0
  for i in range(8):
    num=num+math.pow(2,7-i)*byt[i]

  return int(num)

def convert_to_bits(all_bytes):
  bits=[]
  for byt in all_bytes:
    for b in byt:
      bits.append(b)

  return bits

def e_block(bits,stkey1,stkey2):

  data1=bits[0:32]
  data2=bits[32:64]

  for i in range(16):

    for j in range(32):
      data1[j]=data1[j]^stkey1[i][j]
    for j in range(32):
      data2[j]=data2[j]^stkey2[i][j]

    tmp=data1
    data1=data2
    data2=tmp

  enc=[]
  for i in range(32):
    enc.append(data1[i])

  for i in range(32):
    enc.append(data2[i])
  
  return enc

def new_bytes(bits):
  t=0
  all_bytes=[]

  while(t<256):
    all_bytes.append(bits[t:t+8])
    t=t+8
  
  return all_bytes



def encrypt(bits,stkey1,stkey2):

  block1=e_block(bits[0:64],stkey1,stkey2)
  block2=e_block(bits[64:64*2],stkey1,stkey2)
  block3=e_block(bits[64*2:64*3],stkey1,stkey2)
  block4=e_block(bits[64*3:64*4],stkey1,stkey2)

  encrypted_bits=[]

  for i in range(64):
    encrypted_bits.append(block1[i])

  for i in range(64):
    encrypted_bits.append(block2[i])
  
  for i in range(64):
    encrypted_bits.append(block3[i])

  for i in range(64):
    encrypted_bits.append(block4[i])

  
  return encrypted_bits



song=wave.open("s1.wav",mode='rb')
frame_bytes=bytearray(list(song.readframes(song.getnframes())))
print(len(frame_bytes))

for i in range(10):
  print(frame_bytes[i])

string='Peter Parker is the Spiderman!'
for c in string:
  print(c,end=' ')
print('',end='\n')
print('a')

print(ord('0'))
print(chr(66))

len_array=[]
length=len(string)
while(length>0):

  length=int(length/10)
  len_array.append(length)
print(len_array)

all_bytes=[]

#taking length into consideration first
for i in range(len(len_array)):
  all_bytes.append(int_to_byte(len_array[i]))

print(all_bytes)

#Now the actual text
#ord() is to fetch ascii val of char

for i in range(len(string)):
  all_bytes.append(int_to_byte(ord(string[i])))

print(all_bytes)

stkey1=[]
stkey2=[]

f=open("key1.txt", "r")

f1=f.readlines()

for x in f1:
	key=[]
	for i in range(len(x)-1):
		key.append(ord(x[i])-ord('0'))
	stkey1.append(key)

print(len(stkey1[0]))
print(len(stkey1))

f=open("key2.txt", "r")

f1=f.readlines()

for x in f1:
	key=[]
	for i in range(len(x)-1):
		key.append(ord(x[i])-ord('0'))
	stkey2.append(key)

print(len(stkey2[0]))
print(len(stkey2))


bits=convert_to_bits(all_bytes)
print(len(bits))

bits[16:24]

encrypted_bits=encrypt(bits,stkey1,stkey2)

print(len(encrypted_bits))
encrypted_bits[0:16]

all_bytes=new_bytes(encrypted_bits)
print(len(all_bytes))
print(all_bytes[0])
print(all_bytes[31])

print(int_to_byte(ord('P')))

num=frame_bytes[0]
bit=1

num=(num & 254)|bit
print(int_to_byte(num))

t=0
for tmp_byt in all_bytes:
  for i in range(8):
    frame_bytes[t]=(frame_bytes[t] & 254)|tmp_byt[i]
    t=t+1    
print(t)

frame_modified=bytes(frame_bytes)

with wave.open('song_embed.wav', 'wb') as fd:
    fd.setparams(song.getparams())
    fd.writeframes(frame_modified) 


HOST = '127.0.0.1'  # Standard loopback interface address (localhost)
PORT = 65432

song=wave.open("song_embed.wav",mode='rb')
frame_bytes=bytearray(list(song.readframes(song.getnframes())))
print(len(frame_bytes))

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.bind((HOST,PORT))
s.listen()
conn,addr=s.accept()
data=conn.recv(1024)
print(data)
conn.send(frame_bytes)
s.close()

